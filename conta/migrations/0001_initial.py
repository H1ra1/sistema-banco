# Generated by Django 2.2.3 on 2019-08-04 00:22

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'O nome de usuário só pode conter letras, digitos ou outras paradas', 'invalid')], verbose_name='Nome de usuário')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Ativo')),
                ('is_staff', models.BooleanField(blank=True, default=False, verbose_name='Staff')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de entrada')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Perfil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('sobrenome', models.CharField(max_length=255, verbose_name='Sobrenome')),
                ('data_nascimento', models.CharField(max_length=255, verbose_name='Data de nascimento')),
                ('cpf', models.CharField(max_length=255, verbose_name='CPF')),
                ('telefone', models.CharField(max_length=255, verbose_name='Telefone')),
                ('genero', models.CharField(choices=[('M', 'Masculino'), ('F', 'Feminino'), ('O', 'Outros')], max_length=255, verbose_name='Genero')),
                ('data_criacao', models.DateField(auto_now_add=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conta',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saldo', models.FloatField(default=0.0, verbose_name='Saldo')),
                ('numero_conta', models.CharField(max_length=255, verbose_name='Numero da conta')),
                ('agencia', models.CharField(default='235', max_length=255, verbose_name='Agencia')),
                ('nome_banco', models.CharField(default='LiraBank', max_length=255, verbose_name='Nome do banco')),
                ('ativo', models.BooleanField(default=True)),
                ('titular', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='conta.Perfil')),
            ],
        ),
    ]
